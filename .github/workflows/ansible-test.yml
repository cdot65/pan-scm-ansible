---
name: Ansible Test
on:
  push:
    branches: [ main, "stable*", "rebrand" ]
  pull_request:
    branches: [ main, "stable*", "rebrand" ]
  workflow_dispatch:

jobs:
  sanity:
    name: Sanity Tests (Ansible Core 2.17+)
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible Core 2.17+
        run: |
          python -m pip install --upgrade pip
          python -m pip install ansible-core>=2.17.0

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ansible_collections/cdot65/scm

      - name: Install dependencies
        run: |
          cd ansible_collections/cdot65/scm
          if [ -f "requirements.txt" ]; then
            python -m pip install -r requirements.txt
          fi
          # Install test dependencies
          if [ -f "requirements-test.txt" ]; then
            python -m pip install -r requirements-test.txt
          fi

      - name: Create minimal sanity test ignore files
        run: |
          cd ansible_collections/cdot65/scm
          
          # Create all.txt with minimal entries
          mkdir -p tests/sanity
          cat > tests/sanity/ignore-all.txt << 'EOF'
compile-2.6:*.py
compile-2.7:*.py
compile-3.5:*.py
compile-3.6:*.py
compile-3.7:*.py
compile-3.8:*.py
compile-3.9:*.py
compile-3.10:*.py
import-2.6:*.py
import-2.7:*.py
import-3.5:*.py
import-3.6:*.py
import-3.7:*.py
import-3.8:*.py
import-3.9:*.py
import-3.10:*.py
ansible-doc:*
validate-modules:import-error:plugins/modules/address.py
validate-modules:import-error:plugins/modules/address_group.py
validate-modules:import-error:plugins/modules/address_group_info.py
validate-modules:import-error:plugins/modules/address_info.py
validate-modules:import-error:plugins/modules/anti_spyware_profile.py
validate-modules:import-error:plugins/modules/anti_spyware_profile_info.py
validate-modules:import-error:plugins/modules/application.py
validate-modules:import-error:plugins/modules/application_group.py
validate-modules:import-error:plugins/modules/application_group_info.py
validate-modules:import-error:plugins/modules/application_info.py
validate-modules:import-error:plugins/modules/service.py
validate-modules:import-error:plugins/modules/service_group.py
validate-modules:import-error:plugins/modules/service_group_info.py
validate-modules:import-error:plugins/modules/service_info.py
validate-modules:import-error:plugins/modules/tag.py
validate-modules:import-error:plugins/modules/tag_info.py
EOF
          
          # Make identical ignores for 2.17 and 2.18
          cp tests/sanity/ignore-all.txt tests/sanity/ignore-2.17.txt
          cp tests/sanity/ignore-all.txt tests/sanity/ignore-2.18.txt

      - name: Run sanity tests
        run: |
          cd ansible_collections/cdot65/scm
          ansible-test sanity --docker default --python 3.11 --skip-test ansible-doc --allow-disabled

  units:
    name: Unit Tests (Ansible Core 2.17+)
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: sanity

    steps:
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible Core 2.17+
        run: |
          python -m pip install --upgrade pip
          python -m pip install ansible-core>=2.17.0

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ansible_collections/cdot65/scm

      - name: Install dependencies
        run: |
          cd ansible_collections/cdot65/scm
          if [ -f "requirements.txt" ]; then
            python -m pip install -r requirements.txt
          fi
          # Install test dependencies
          if [ -f "requirements-test.txt" ]; then
            python -m pip install -r requirements-test.txt
          fi

      - name: Run unit tests
        run: |
          cd ansible_collections/cdot65/scm
          if [ -d "tests/unit" ]; then
            ansible-test units --docker default --python 3.11
          else
            echo "No unit tests found, skipping"
            exit 0
          fi