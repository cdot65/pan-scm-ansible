---
# Test playbook for vulnerability_protection_profile_info module
- name: Test SCM Vulnerability Protection Profile Info Module Operations
  hosts: localhost
  gather_facts: false
  vars_files:
    - vault.yaml
  vars:
    timestamp: "{{ '%y%m%d%H%M'|strftime }}"
    profile_name: "VulnInfo_{{ timestamp }}"
    profile_name2: "VulnInfo2_{{ timestamp }}"
    provider:
      client_id: "{{ client_id }}"
      client_secret: "{{ client_secret }}"
      tsg_id: "{{ tsg_id }}"
      log_level: "INFO"

  tasks:
    # ==========================================
    # INITIAL CLEANUP
    # ==========================================
    - name: Remove test vulnerability protection profile objects if they exist
      cdot65.scm.vulnerability_protection_profile:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas" 
        state: "absent"
      loop:
        - "{{ profile_name }}"
        - "{{ profile_name2 }}"
      ignore_errors: yes
      tags: 
        - dev-cleanup

    # Create standard dev tags for testing (commented out due to tag module path issue)
    # - name: Create standard dev tags for testing
    #   cdot65.scm.tag:
    #     provider: "{{ provider }}"
    #     name: "{{ item }}"
    #     folder: "Texas"
    #     state: "present"
    #   loop:
    #     - "dev-ansible"
    #     - "dev-automation"
    #     - "dev-test"
    #     - "dev-cicd"
    #   ignore_errors: yes
    #   tags:
    #     - dev-cleanup

    - name: Set task tags
      set_fact:
        task_tags: 
          - "dev-ansible"
          - "dev-automation"
          - "dev-test"
          - "vuln-protection-info"

    # ==========================================
    # CREATE TEST PROFILES FOR INFO TESTING
    # ==========================================
    - name: Create a vulnerability protection profile for testing CVE rules
      cdot65.scm.vulnerability_protection_profile:
        provider: "{{ provider }}"
        name: "{{ profile_name }}"
        description: "Test vulnerability profile for info module"
        folder: "Texas"
        rules:
          - name: "Critical-CVE-Rule"
            severity: ["critical"]
            category: "code-execution"
            host: "server"
            action: {"reset_both": {}}
            packet_capture: "disable"
            cve: ["CVE-2021-44228"]
            vendor: ["any"]
        state: "present"
      tags:
        - dev-ansible
        - dev-test

    - name: Create a vulnerability protection profile for testing category filtering
      cdot65.scm.vulnerability_protection_profile:
        provider: "{{ provider }}"
        name: "{{ profile_name2 }}"
        description: "Second test profile for info module"
        folder: "Texas"
        rules:
          - name: "SQL-Injection-Rule"
            severity: ["high"]
            category: "sql-injection"
            host: "server"
            action: {"alert": {}}
            packet_capture: "disable"
            cve: ["any"]
            vendor: ["any"]
          - name: "XSS-Rule"
            severity: ["medium"]
            category: "code-execution"
            host: "client"
            action: {"alert": {}}
            packet_capture: "disable"
            cve: ["any"]
            vendor: ["any"]
        state: "present"
      tags:
        - dev-ansible
        - dev-test

    # ==========================================
    # INFO OPERATIONS - SPECIFIC PROFILE
    # ==========================================
    - name: Get information about a specific vulnerability protection profile
      cdot65.scm.vulnerability_protection_profile_info:
        provider: "{{ provider }}"
        name: "{{ profile_name }}"
        folder: "Texas"
      register: info_result
      tags:
        - dev-ansible
        - dev-test

    - name: Debug specific profile info result
      debug:
        var: info_result
        verbosity: 1
      tags:
        - dev-test

    - name: Verify vulnerability protection profile info retrieval
      assert:
        that:
          - info_result.vulnerability_protection_profile is defined
          - info_result.vulnerability_protection_profile.name is defined
          - info_result.vulnerability_protection_profile.description == "Test vulnerability profile for info module"
          - info_result.vulnerability_protection_profile.rules[0].cve[0] == "CVE-2021-44228"
        fail_msg: "Profile info retrieval failed"
        success_msg: "Successfully retrieved vulnerability protection profile info"
      tags:
        - dev-test

    # ==========================================
    # INFO OPERATIONS - LIST ALL PROFILES
    # ==========================================
    - name: List all vulnerability protection profiles in folder
      cdot65.scm.vulnerability_protection_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
      register: list_result
      tags:
        - dev-ansible
        - dev-test

    - name: Debug all profiles result
      debug:
        var: list_result
        verbosity: 1
      tags:
        - dev-test

    - name: Verify all profiles list
      assert:
        that:
          - list_result.vulnerability_protection_profiles is defined
          - list_result.vulnerability_protection_profiles | length >= 2
          - list_result.vulnerability_protection_profiles | selectattr('name', 'equalto', profile_name) | list | length == 1
          - list_result.vulnerability_protection_profiles | selectattr('name', 'equalto', profile_name2) | list | length == 1
        fail_msg: "List all profiles failed"
        success_msg: "Successfully listed all vulnerability protection profiles"
      tags:
        - dev-test

    # ==========================================
    # INFO OPERATIONS - FILTER BY SEVERITY
    # ==========================================
    - name: Filter vulnerability protection profiles by severity
      cdot65.scm.vulnerability_protection_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
        severity: ["critical"]
      register: severity_result
      tags:
        - dev-ansible
        - dev-test

    - name: Debug severity filtered profiles result
      debug:
        var: severity_result
        verbosity: 1
      tags:
        - dev-test

    - name: Verify filtered profiles by severity
      assert:
        that:
          - severity_result.vulnerability_protection_profiles is defined
          - severity_result.vulnerability_protection_profiles | length > 0
        fail_msg: "Filtering by severity failed"
        success_msg: "Successfully filtered vulnerability protection profiles by severity"
      tags:
        - dev-test

    # ==========================================
    # INFO OPERATIONS - FILTER BY CATEGORY
    # ==========================================
    - name: Filter vulnerability protection profiles by category
      cdot65.scm.vulnerability_protection_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
        category: ["sql-injection"]
      register: category_result
      tags:
        - dev-ansible
        - dev-test

    - name: Debug category filtered profiles result
      debug:
        var: category_result
        verbosity: 1
      tags:
        - dev-test

    - name: Verify filtered profiles by category
      assert:
        that:
          - category_result.vulnerability_protection_profiles is defined
          - category_result.vulnerability_protection_profiles | length > 0
        fail_msg: "Filtering by category failed"
        success_msg: "Successfully filtered vulnerability protection profiles by category"
      tags:
        - dev-test

    # ==========================================
    # INFO OPERATIONS - EXACT MATCH PARAMETER
    # ==========================================
    - name: Test with exact match parameter
      cdot65.scm.vulnerability_protection_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
        exact_match: true
      register: exact_match_result
      tags:
        - dev-ansible
        - dev-test

    - name: Debug exact match profiles result
      debug:
        var: exact_match_result
        verbosity: 1
      tags:
        - dev-test

    - name: Verify exact match profiles list
      assert:
        that:
          - exact_match_result.vulnerability_protection_profiles is defined
          - exact_match_result.vulnerability_protection_profiles | length >= 2
        fail_msg: "Listing profiles with exact match failed"
        success_msg: "Successfully listed vulnerability protection profiles with exact match"
      tags:
        - dev-test

    # ==========================================
    # DELETE OPERATIONS
    # ==========================================
    - name: Delete test vulnerability protection profiles
      cdot65.scm.vulnerability_protection_profile:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      loop:
        - "{{ profile_name }}"
        - "{{ profile_name2 }}"
      register: delete_result
      tags:
        - dev-ansible
        - dev-test

    - name: Debug delete result
      debug:
        var: delete_result
        verbosity: 1
      tags:
        - dev-test

    - name: Verify profiles were deleted
      assert:
        that:
          - delete_result.results[0].changed == true
          - delete_result.results[1].changed == true
        fail_msg: "Profile deletion failed"
        success_msg: "Successfully deleted all test vulnerability protection profiles"
      tags:
        - dev-test

    # ==========================================
    # FINAL CLEANUP
    # ==========================================
    # Delete standard dev tags (commented out due to tag module path issue)
    # - name: Delete standard dev tags used for testing
    #   cdot65.scm.tag:
    #     provider: "{{ provider }}"
    #     name: "{{ item }}"
    #     folder: "Texas"
    #     state: "absent"
    #   loop:
    #     - "dev-ansible"
    #     - "dev-automation"
    #     - "dev-test"
    #     - "dev-cicd"
    #   ignore_errors: yes
    #   tags:
    #     - dev-cleanup

    - name: Cleanup completed
      debug:
        msg: "Test cleanup completed"
      tags:
        - dev-test