---
- name: Test Service Group Info Module in Strata Cloud Manager
  hosts: localhost
  gather_facts: false
  vars_files:
    - vault.yaml
  vars:
    provider:
      client_id: "{{ client_id }}"
      client_secret: "{{ client_secret }}"
      tsg_id: "{{ tsg_id }}"
      log_level: "INFO"
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
  tasks:
    # First clean up any existing test services if they exist
    - name: Set fact for service and service group objects
      set_fact:
        web_service_name: "web-service-{{ timestamp }}"
        dns_service_name: "dns-service-{{ timestamp }}"
        web_group_name: "web-group-{{ timestamp }}"
        network_group_name: "network-group-{{ timestamp }}"
        dev_group_names:
          - "dev-ansible-{{ timestamp }}"
          - "dev-automation-{{ timestamp }}"
          - "dev-test-{{ timestamp }}"
          - "dev-cicd-{{ timestamp }}"
      tags:
        - dev-ansible
        - dev-automation
        - dev-test
        - dev-cicd

    - name: Remove test service groups if they exist
      cdot65.scm.service_group:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "{{ web_group_name }}"
        - "{{ network_group_name }}"
        - "{{ dev_group_names[0] }}"
        - "{{ dev_group_names[1] }}"
        - "{{ dev_group_names[2] }}"
        - "{{ dev_group_names[3] }}"
      tags:
        - dev-cleanup
        
    # Create services for service groups
    - name: Create TCP web service
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "{{ web_service_name }}"
        protocol:
          tcp:
            port: "80,443"
            override:
              timeout: 3600
              halfclose_timeout: 120
              timewait_timeout: 15
        description: "Web service"
        folder: "Texas"
        tag: ["Web", "Production"]
        state: "present"
      register: create_web_service_result
      tags:
        - dev-test

    - name: Create UDP DNS service
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "{{ dns_service_name }}"
        protocol:
          udp:
            port: "53"
            override:
              timeout: 30
        description: "DNS service"
        folder: "Texas"
        tag: ["DNS", "Network"]
        state: "present"
      register: create_dns_service_result
        
    # ==========================================
    # CREATE service groups for information gathering
    # ==========================================
    - name: Create dev-* service groups for testing
      cdot65.scm.service_group:
        provider: "{{ provider }}"
        name: "{{ item.name }}"
        members: 
          - "{{ web_service_name }}"
        folder: "Texas"
        tag: ["dev-tag"]
        state: "present"
      loop:
        - { name: "{{ dev_group_names[0] }}" }
        - { name: "{{ dev_group_names[1] }}" }
        - { name: "{{ dev_group_names[2] }}" }
        - { name: "{{ dev_group_names[3] }}" }
      register: create_dev_groups_result
      tags:
        - dev-ansible
        - dev-automation
      
    - name: Create a web service group
      cdot65.scm.service_group:
        provider: "{{ provider }}"
        name: "{{ web_group_name }}"
        members:
          - "{{ web_service_name }}"
          - "HTTP"
          - "HTTPS" 
        folder: "Texas"
        tag: ["Web", "Production"]
        state: "present"
      register: create_web_group_result
      tags:
        - dev-test

    - name: Create a network service group
      cdot65.scm.service_group:
        provider: "{{ provider }}"
        name: "{{ network_group_name }}"
        members:
          - "{{ dns_service_name }}"
          - "DNS"
        folder: "Texas"
        tag: ["DNS", "Network"]
        state: "present"
      register: create_network_group_result

    # Verify all service groups were created successfully
    - name: Verify service group creation
      assert:
        that:
          - create_dev_groups_result is succeeded
          - create_web_group_result is succeeded
          - create_network_group_result is succeeded
        fail_msg: "Failed to create some test service groups"
        success_msg: "Successfully created all test service groups"
      tags:
        - dev-cicd

    # ==========================================
    # INFO queries
    # ==========================================
    # Get info about a specific service group
    - name: Get information about a specific service group
      cdot65.scm.service_group_info:
        provider: "{{ provider }}"
        name: "{{ web_group_name }}"
        folder: "Texas"
      register: service_group_info
      tags:
        - dev-test

    - name: Display specific service group information
      debug:
        var: service_group_info
        verbosity: 1

    - name: Verify specific service group query
      assert:
        that:
          - service_group_info.service_group is defined
          - service_group_info.service_group.name == web_group_name
          - service_group_info.service_group.members | length >= 3
          - "{{ web_service_name in service_group_info.service_group.members }}"
          - "{{ 'HTTPS' in service_group_info.service_group.members }}"
        fail_msg: "Failed to retrieve specific service group information"
        success_msg: "Successfully retrieved specific service group information"
      tags:
        - dev-ansible

    # Get all service groups in folder
    - name: List all service group objects in a folder
      cdot65.scm.service_group_info:
        provider: "{{ provider }}"
        folder: "Texas"
      register: all_service_groups
      tags:
        - dev-automation

    - name: Display all service groups
      debug:
        var: all_service_groups
        verbosity: 1

    - name: Verify all service groups listing
      assert:
        that:
          - all_service_groups.service_groups is defined
          - all_service_groups.service_groups | length >= 6  # All our test service groups plus any existing ones
          - (web_group_name) in (all_service_groups.service_groups | map(attribute="name") | list)
          - (network_group_name) in (all_service_groups.service_groups | map(attribute="name") | list)
          - (dev_group_names[0]) in (all_service_groups.service_groups | map(attribute="name") | list)
        fail_msg: "Failed to retrieve all service groups"
        success_msg: "Successfully retrieved all service groups"

    # List service groups with member filters
    - name: List service groups with specific member
      cdot65.scm.service_group_info:
        provider: "{{ provider }}"
        folder: "Texas"
        members: ["{{ web_service_name }}"]
      register: member_filtered_groups
      tags:
        - dev-cicd

    - name: Display member-filtered service groups
      debug:
        var: member_filtered_groups
        verbosity: 1

    - name: Verify member-filtered service group query
      assert:
        that:
          - member_filtered_groups.service_groups | length >= 5  # web_group + dev groups
          - member_filtered_groups.service_groups | selectattr('name', 'equalto', web_group_name) | list | length == 1
          - member_filtered_groups.service_groups | selectattr('name', 'equalto', network_group_name) | list | length == 0
        fail_msg: "Failed to filter service groups by member"
        success_msg: "Successfully filtered service groups by member"
      tags:
        - dev-test

    # List service groups with tag filters
    - name: List service groups with Web tag
      cdot65.scm.service_group_info:
        provider: "{{ provider }}"
        folder: "Texas"
        tags: ["Web"]
      register: web_tagged_groups
      tags:
        - dev-automation
        
    - name: Display Web-tagged service groups
      debug:
        var: web_tagged_groups
        verbosity: 1

    - name: Verify tag-filtered service group query
      assert:
        that:
          - web_tagged_groups.service_groups | selectattr('name', 'equalto', web_group_name) | list | length == 1
          - web_tagged_groups.service_groups | selectattr('name', 'equalto', network_group_name) | list | length == 0
        fail_msg: "Failed to filter service groups by tag"
        success_msg: "Successfully filtered service groups by tag"

    # Since we can't filter by prefix, just get all service groups and filter manually for dev-*
    - name: Get all service groups for dev- filtering
      cdot65.scm.service_group_info:
        provider: "{{ provider }}"
        folder: "Texas"
      register: all_groups_for_filtering
      tags:
        - dev-automation
        
    - name: Filter service groups for dev- prefix in memory
      set_fact:
        dev_groups: 
          service_groups: "{{ all_groups_for_filtering.service_groups | selectattr('name', 'match', 'dev-.*') | list }}"

    - name: Display dev service groups
      debug:
        var: dev_groups
        verbosity: 1

    - name: Verify dev service groups query
      assert:
        that:
          - dev_groups.service_groups | selectattr('name', 'equalto', dev_group_names[0]) | list | length == 1
          - dev_groups.service_groups | selectattr('name', 'equalto', dev_group_names[1]) | list | length == 1
          - dev_groups.service_groups | selectattr('name', 'equalto', web_group_name) | list | length == 0
        fail_msg: "Failed to filter service groups by prefix"
        success_msg: "Successfully filtered service groups by prefix"

    # ==========================================
    # CLEANUP
    # ==========================================
    # Clean up test service groups and services
    - name: Remove all test service groups
      cdot65.scm.service_group:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "{{ web_group_name }}"
        - "{{ network_group_name }}"
        - "{{ dev_group_names[0] }}"
        - "{{ dev_group_names[1] }}"
        - "{{ dev_group_names[2] }}"
        - "{{ dev_group_names[3] }}"
      register: service_group_cleanup_result
      tags:
        - dev-cleanup
        
    - name: Remove all test services
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "{{ web_service_name }}"
        - "{{ dns_service_name }}"
      register: service_cleanup_result
      tags:
        - dev-cleanup

    - name: Verify service group cleanup
      assert:
        that:
          - service_group_cleanup_result.results | selectattr('item', 'equalto', web_group_name) | map(attribute='changed') | list | first
          - service_group_cleanup_result.results | selectattr('item', 'equalto', network_group_name) | map(attribute='changed') | list | first
        fail_msg: "Failed to clean up test service groups"
        success_msg: "Successfully cleaned up test service groups"