---
- name: Test Service Module in Strata Cloud Manager
  hosts: localhost
  gather_facts: false
  vars_files:
    - vault.yaml
  vars:
    provider:
      client_id: "{{ client_id }}"
      client_secret: "{{ client_secret }}"
      tsg_id: "{{ tsg_id }}"
      log_level: "INFO"
  tasks:
    # First clean up any existing test services
    - name: Remove test services if they exist
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "Test-TCP-Service"
        - "Test-UDP-Service"
        - "Test-TCP-Service-Updated"
        
    # Create required tags
    - name: Create tags needed for testing
      cdot65.scm.tag:
        provider: "{{ provider }}"
        name: "{{ item.name }}"
        color: "{{ item.color }}"
        comments: "Test tag for service module testing"
        folder: "Texas"
        state: "present"
      ignore_errors: true
      loop:
        - { name: "Web", color: "Blue" }
        - { name: "Test", color: "Green" }
        - { name: "DNS", color: "Orange" }
        - { name: "Network", color: "Red" }
        - { name: "Updated", color: "Purple" }

    # Create a TCP service with override settings
    - name: Create TCP service with port and timeout overrides
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-TCP-Service"
        protocol:
          tcp:
            port: "80,443"
            override:
              timeout: 60
              halfclose_timeout: 30
              timewait_timeout: 10
        description: "Test TCP service with ports 80 and 443"
        folder: "Texas"
        tag: ["Web", "Test"]
        state: "present"
      register: tcp_create_result

    # Display and verify the TCP service creation
    - name: Display TCP service creation result
      debug:
        var: tcp_create_result
        verbosity: 1

    - name: Verify TCP service creation
      assert:
        that:
          - tcp_create_result.changed == true
          - tcp_create_result.service.name == "Test-TCP-Service"
          - tcp_create_result.service.description == "Test TCP service with ports 80 and 443"
          - tcp_create_result.service.protocol.tcp.port == "80,443"
          - tcp_create_result.service.protocol.tcp.override.timeout == 60
          - tcp_create_result.service.protocol.tcp.override.halfclose_timeout == 30
          - tcp_create_result.service.protocol.tcp.override.timewait_timeout == 10
          - tcp_create_result.service.tag | length == 2
          - '"Web" in tcp_create_result.service.tag'
          - '"Test" in tcp_create_result.service.tag'

    # Test idempotency - run the same create again
    - name: Test idempotency for TCP service (re-run same create)
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-TCP-Service"
        protocol:
          tcp:
            port: "80,443"
            override:
              timeout: 60
              halfclose_timeout: 30
              timewait_timeout: 10
        description: "Test TCP service with ports 80 and 443"
        folder: "Texas"
        tag: ["Web", "Test"]
        state: "present"
      register: tcp_idempotency_result

    - name: Verify TCP service idempotency
      assert:
        that:
          - tcp_idempotency_result.changed == false

    # Create a UDP service with timeout override
    - name: Create UDP service with port and timeout override
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-UDP-Service"
        protocol:
          udp:
            port: "53"
            override:
              timeout: 120
        description: "Test UDP service for DNS"
        folder: "Texas"
        tag: ["DNS", "Test"]
        state: "present"
      register: udp_create_result

    # Display and verify the UDP service creation
    - name: Display UDP service creation result
      debug:
        var: udp_create_result
        verbosity: 1

    - name: Verify UDP service creation
      assert:
        that:
          - udp_create_result.changed == true
          - udp_create_result.service.name == "Test-UDP-Service"
          - udp_create_result.service.description == "Test UDP service for DNS"
          - udp_create_result.service.protocol.udp.port == "53"
          - udp_create_result.service.protocol.udp.override.timeout == 120
          - udp_create_result.service.tag | length == 2
          - '"DNS" in udp_create_result.service.tag'
          - '"Test" in udp_create_result.service.tag'

    # Update the TCP service with new ports and tags
    - name: Update TCP service with additional port and changed description
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-TCP-Service"
        protocol:
          tcp:
            port: "80,443,8080"
        description: "Updated TCP service with additional port 8080"
        folder: "Texas"
        tag: ["Web", "Test", "Updated"]
        state: "present"
      register: tcp_update_result

    # Display and verify the TCP service update
    - name: Display TCP service update result
      debug:
        var: tcp_update_result
        verbosity: 1

    - name: Verify TCP service update
      assert:
        that:
          - tcp_update_result.changed == true
          - tcp_update_result.service.name == "Test-TCP-Service"
          - tcp_update_result.service.description == "Updated TCP service with additional port 8080"
          - tcp_update_result.service.protocol.tcp.port == "80,443,8080"
          - tcp_update_result.service.tag | length == 3
          - '"Updated" in tcp_update_result.service.tag'

    # Update only description
    - name: Update just the description of UDP service
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-UDP-Service"
        protocol:
          udp:
            port: "53"
        description: "Updated description for DNS service"
        folder: "Texas"
        state: "present"
      register: udp_description_update_result

    - name: Verify UDP service description update
      assert:
        that:
          - udp_description_update_result.changed == true
          - udp_description_update_result.service.description == "Updated description for DNS service"
          - udp_description_update_result.service.protocol.udp.port == "53"

    # Delete the TCP service
    - name: Delete the TCP service
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-TCP-Service"
        folder: "Texas"
        state: "absent"
      register: tcp_delete_result

    # Verify TCP service deletion
    - name: Verify TCP service deletion
      assert:
        that:
          - tcp_delete_result.changed == true

    # Test idempotency for deleting a service that doesn't exist
    - name: Test idempotency for deleting a non-existent service
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-TCP-Service"
        folder: "Texas"
        state: "absent"
      register: tcp_delete_idempotency_result

    - name: Verify TCP service deletion idempotency
      assert:
        that:
          - tcp_delete_idempotency_result.changed == false

    # Delete the UDP service
    - name: Delete the UDP service
      cdot65.scm.service:
        provider: "{{ provider }}"
        name: "Test-UDP-Service"
        folder: "Texas"
        state: "absent"
      register: udp_delete_result

    # Verify UDP service deletion
    - name: Verify UDP service deletion
      assert:
        that:
          - udp_delete_result.changed == true
          
    # Clean up test tags
    - name: Remove tags created for testing
      cdot65.scm.tag:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "Web"
        - "Test"
        - "DNS"
        - "Network"
        - "Updated"
