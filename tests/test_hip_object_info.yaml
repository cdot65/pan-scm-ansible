---
# Playbook for testing Strata Cloud Manager HIP object info module
# Usage: ansible-playbook tests/test_hip_object_info.yaml --vault-password-file=tests/.vault_password

- name: Test SCM HIP Object Info Module
  hosts: localhost
  gather_facts: no
  vars_files:
    - vault.yaml
  vars:
    provider:
      client_id: "{{ client_id }}"
      client_secret: "{{ client_secret }}"
      tsg_id: "{{ tsg_id }}"
      log_level: "INFO"
    test_timestamp: "{{ lookup('pipe', 'date +%m%d%H%M') }}"
    test_folder: "Texas"
  tasks:
    # First clean up any existing test objects if they exist
    - name: Remove test HIP objects if they exist
      cdot65.scm.hip_object:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "{{ test_folder }}"
        state: "absent"
      ignore_errors: true
      loop:
        - "Info_HIP_{{ test_timestamp }}"
      tags:
        - dev-cleanup
        - dev-test

    # ==========================================
    # SETUP - Create test objects
    # ==========================================
    - name: Create HIP object with disk encryption for testing info module
      cdot65.scm.hip_object:
        provider: "{{ provider }}"
        name: "Info_HIP_{{ test_timestamp }}"
        description: "Disk encryption HIP object for info testing"
        disk_encryption:
          criteria:
            is_installed: true
            encrypted_locations:
              - name: "C:"
                encryption_state: 
                  is: "encrypted"
          vendor:
            - name: "Generic"
              product: ["BitLocker"]
        folder: "{{ test_folder }}"
        state: "present"
      register: disk_hip_result
      tags:
        - setup
        - dev-test
        - dev-automation

    # Store the created object name
    - name: Set HIP object name for testing info retrieval
      ansible.builtin.set_fact:
        disk_hip_name: "{{ disk_hip_result.hip_object.name }}"

    # Wait to ensure objects are fully created
    - name: Pause briefly for HIP object creation to complete
      ansible.builtin.pause:
        seconds: 2
      tags:
        - setup

    # ==========================================
    # READ - get specific object
    # ==========================================
    - name: Get information about a specific disk encryption HIP object
      cdot65.scm.hip_object_info:
        provider: "{{ provider }}"
        name: "{{ disk_hip_name }}"
        folder: "{{ test_folder }}"
      register: specific_hip_info
      tags:
        - info
        - dev-test
        - dev-ansible

    - name: Debug specific HIP object info result
      debug:
        var: specific_hip_info
        verbosity: 1

    - name: Verify retrieval of specific HIP object
      ansible.builtin.assert:
        that:
          - specific_hip_info.hip_object is defined
          - specific_hip_info.hip_object.name == disk_hip_name
          - specific_hip_info.hip_object.description == "Disk encryption HIP object for info testing"
        fail_msg: "Failed to retrieve specific HIP object info"
        success_msg: "Successfully retrieved specific HIP object info"
      tags:
        - info
        - dev-test
        - dev-cicd

    # ==========================================
    # READ - list all objects
    # ==========================================
    - name: List all HIP objects in the folder
      cdot65.scm.hip_object_info:
        provider: "{{ provider }}"
        folder: "{{ test_folder }}"
      register: all_hip_objects
      tags:
        - info
        - dev-test
        - dev-automation

    - name: Debug all HIP objects info result
      debug:
        var: all_hip_objects
        verbosity: 1

    - name: Verify retrieval of HIP objects list
      ansible.builtin.assert:
        that:
          - all_hip_objects.hip_objects is defined
          - all_hip_objects.hip_objects | length >= 1
          - disk_hip_name in (all_hip_objects.hip_objects | map(attribute='name') | list)
        fail_msg: "Failed to retrieve HIP objects list"
        success_msg: "Successfully retrieved HIP objects list"
      tags:
        - info
        - dev-test
        - dev-cicd

    # ==========================================
    # READ - filter by criteria type
    # ==========================================
    - name: List only disk encryption HIP objects
      cdot65.scm.hip_object_info:
        provider: "{{ provider }}"
        folder: "{{ test_folder }}"
        criteria_types: ["disk_encryption"]
      register: disk_hip_objects
      tags:
        - info
        - dev-test
        - dev-automation

    - name: Debug disk encryption HIP objects info result
      debug:
        var: disk_hip_objects
        verbosity: 1

    - name: Verify filtering by criteria type
      ansible.builtin.assert:
        that:
          - disk_hip_objects.hip_objects is defined
          - disk_hip_name in (disk_hip_objects.hip_objects | map(attribute='name') | list)
        fail_msg: "Failed to filter HIP objects by criteria type"
        success_msg: "Successfully filtered HIP objects by criteria type"
      tags:
        - info
        - dev-test
        - dev-cicd

    # ==========================================
    # Cleanup
    # ==========================================
    - name: Remove test HIP objects
      cdot65.scm.hip_object:
        provider: "{{ provider }}"
        name: "{{ disk_hip_name }}"
        folder: "{{ test_folder }}"
        state: "absent"
      ignore_errors: true
      tags:
        - cleanup
        - dev-test
        - dev-cleanup

    # Skipping cleanup of test tags
    # - name: Remove tags created for testing
    #   cdot65.scm.tag:
    #     provider: "{{ provider }}"
    #     name: "{{ item }}"
    #     folder: "{{ test_folder }}"
    #     state: "absent"
    #   ignore_errors: true
    #   loop:
    #     - "dev-ansible"
    #     - "dev-automation"
    #     - "dev-test"
    #     - "dev-cicd"
    #   tags:
    #     - dev-cleanup