---
- name: Test Anti-Spyware Profile Info Module in Strata Cloud Manager
  hosts: localhost
  gather_facts: false
  vars_files:
    - vault.yaml
  vars:
    provider:
      client_id: "{{ client_id }}"
      client_secret: "{{ client_secret }}"
      tsg_id: "{{ tsg_id }}"
      log_level: "INFO"
  tasks:
    # First clean up any existing test profiles if they exist
    - name: Remove test anti-spyware profiles if they exist
      cdot65.scm.anti_spyware_profile:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "Test-Spyware-Profile-1"
        - "Test-Spyware-Profile-2"
        - "Test-Spyware-Profile-3"
      tags:
        - dev-cleanup
        - dev-test

    # Create required tags
    - name: Create tags needed for testing
      cdot65.scm.tag:
        provider: "{{ provider }}"
        name: "{{ item.name }}"
        color: "{{ item.color }}"
        comments: "Test tag for anti-spyware profile info module testing"
        folder: "Texas"
        state: "present"
      ignore_errors: true
      loop:
        - { name: "dev-ansible", color: "Blue" }
        - { name: "dev-automation", color: "Green" }
        - { name: "dev-test", color: "Orange" }
        - { name: "dev-cicd", color: "Red" }
      tags:
        - dev-ansible
        - dev-automation

    # ==========================================
    # CREATE test profiles for info testing
    # ==========================================
    - name: Create first test profile
      cdot65.scm.anti_spyware_profile:
        provider: "{{ provider }}"
        name: "Test-Spyware-Profile-1"
        description: "Test profile 1 for info module"
        cloud_inline_analysis: true
        inline_exception_edl_url: []
        rules:
          - name: "Critical-Rule"
            severity: ["critical"]
            category: "spyware"
            packet_capture: "single-packet"
            threat_name: "test-critical-threat"
            action: "alert"
        folder: "Texas"
        tag: ["dev-ansible", "dev-test"]
        state: "present"
      register: profile1_create_result
      tags:
        - dev-test

    - name: Create second test profile
      cdot65.scm.anti_spyware_profile:
        provider: "{{ provider }}"
        name: "Test-Spyware-Profile-2"
        description: "Test profile 2 for info module"
        cloud_inline_analysis: false
        inline_exception_edl_url: []
        rules:
          - name: "High-Rule"
            severity: ["high"]
            category: "command-and-control"
            packet_capture: "disable"
            threat_name: "test-high-rule-threat"
            action: "reset-both"
        folder: "Texas"
        tag: ["dev-automation", "dev-cicd"]
        state: "present"
      register: profile2_create_result
      tags:
        - dev-automation

    - name: Create third test profile
      cdot65.scm.anti_spyware_profile:
        provider: "{{ provider }}"
        name: "Test-Spyware-Profile-3"
        description: "Test profile 3 for info module"
        cloud_inline_analysis: true
        inline_exception_edl_url: []
        rules:
          - name: "Medium-Rule"
            severity: ["medium"]
            category: "vulnerability"
            packet_capture: "extended-capture"
            threat_name: "test-medium-threat"
            action: "block-ip"
        threat_exception:
          - name: "exception-test"
            packet_capture: "disable"
            notes: "Test exception"
            action: "allow"
        folder: "Texas"
        tag: ["dev-cicd"]
        state: "present"
      register: profile3_create_result
      tags:
        - dev-cicd

    # Verify profile creation
    - name: Verify anti-spyware profile creation
      assert:
        that:
          - profile1_create_result is changed
          - profile2_create_result is changed
          - profile3_create_result is changed
        fail_msg: "Failed to create test anti-spyware profiles"
        success_msg: "Successfully created test anti-spyware profiles"
      tags:
        - dev-ansible

    # ==========================================
    # INFO queries
    # ==========================================
    # Get info about a specific profile
    - name: Get information about a specific profile
      cdot65.scm.anti_spyware_profile_info:
        provider: "{{ provider }}"
        name: "Test-Spyware-Profile-1"
        folder: "Texas"
      register: specific_info
      tags:
        - dev-test

    - name: Display specific profile info
      debug:
        var: specific_info
        verbosity: 1

    - name: Verify specific profile info
      assert:
        that:
          - specific_info.anti_spyware_profiles is defined
          - specific_info.anti_spyware_profiles | length == 1
          - specific_info.anti_spyware_profiles[0].name == "Test-Spyware-Profile-1"
          - specific_info.anti_spyware_profiles[0].description == "Test profile 1 for info module"
          - specific_info.anti_spyware_profiles[0].cloud_inline_analysis == true
          - specific_info.anti_spyware_profiles[0].rules | length == 1
          - specific_info.anti_spyware_profiles[0].rules[0].name == "Critical-Rule"
          - specific_info.anti_spyware_profiles[0].rules[0].category == "spyware"
          - specific_info.anti_spyware_profiles[0].tag | length == 2
          - '"dev-ansible" in specific_info.anti_spyware_profiles[0].tag'
          - '"dev-test" in specific_info.anti_spyware_profiles[0].tag'
        fail_msg: "Failed to retrieve specific anti-spyware profile information"
        success_msg: "Successfully retrieved specific anti-spyware profile information"
      tags:
        - dev-cicd

    # List all profiles
    - name: List all anti-spyware profiles in a folder
      cdot65.scm.anti_spyware_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
      register: all_profiles
      tags:
        - dev-automation

    - name: Display all profiles
      debug:
        var: all_profiles
        verbosity: 1

    - name: Verify all profiles listing
      assert:
        that:
          - all_profiles.anti_spyware_profiles is defined
          - all_profiles.anti_spyware_profiles | length >= 3  # Our test profiles plus any existing
          - all_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-1') | list | length == 1
          - all_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-2') | list | length == 1
          - all_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-3') | list | length == 1
        fail_msg: "Failed to retrieve all anti-spyware profiles"
        success_msg: "Successfully retrieved all anti-spyware profiles"
      tags:
        - dev-ansible

    # Filter by cloud inline analysis
    - name: Filter profiles by cloud inline analysis
      cdot65.scm.anti_spyware_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
        cloud_inline_analysis: true
      register: filtered_profiles
      tags:
        - dev-cicd

    - name: Display filtered profiles
      debug:
        var: filtered_profiles
        verbosity: 1

    - name: Verify filtered profiles
      assert:
        that:
          - filtered_profiles.anti_spyware_profiles is defined
          - filtered_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-1') | list | length == 1
          - filtered_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-3') | list | length == 1
          - filtered_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-2') | list | length == 0
        fail_msg: "Failed to filter profiles by cloud inline analysis"
        success_msg: "Successfully filtered profiles by cloud inline analysis"

    # Filter by tag
    - name: Filter profiles by tag
      cdot65.scm.anti_spyware_profile_info:
        provider: "{{ provider }}"
        folder: "Texas"
        filter_tag: "dev-cicd"
      register: tagged_profiles
      tags:
        - dev-test

    - name: Display tagged profiles
      debug:
        var: tagged_profiles
        verbosity: 1

    - name: Verify tagged profiles filter
      assert:
        that:
          - tagged_profiles.anti_spyware_profiles is defined
          - tagged_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-2') | list | length == 1
          - tagged_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-3') | list | length == 1
          - tagged_profiles.anti_spyware_profiles | selectattr('name', 'equalto', 'Test-Spyware-Profile-1') | list | length == 0
        fail_msg: "Failed to filter profiles by tag"
        success_msg: "Successfully filtered profiles by tag"
      tags:
        - dev-automation

    # ==========================================
    # CLEANUP
    # ==========================================
    # Clean up test profiles
    - name: Remove test profiles
      cdot65.scm.anti_spyware_profile:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      loop:
        - "Test-Spyware-Profile-1"
        - "Test-Spyware-Profile-2"
        - "Test-Spyware-Profile-3"
      register: profile_cleanup_result
      tags:
        - dev-cleanup

    - name: Verify profile cleanup
      assert:
        that:
          - profile_cleanup_result is succeeded
        fail_msg: "Failed to clean up test anti-spyware profiles"
        success_msg: "Successfully cleaned up test anti-spyware profiles"

    # Clean up test tags
    - name: Remove tags created for testing
      cdot65.scm.tag:
        provider: "{{ provider }}"
        name: "{{ item }}"
        folder: "Texas"
        state: "absent"
      ignore_errors: true
      loop:
        - "dev-ansible"
        - "dev-automation"
        - "dev-test"
        - "dev-cicd"
      tags:
        - dev-cleanup
